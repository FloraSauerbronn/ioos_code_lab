language: minimal

sudo: false

cache:
  directories:
    - $HOME/miniconda

# Removing the directory will remove the env but leave the cached packages
# at $HOME/miniconda/pkgs. That is a win-win because when re-creating the
# env we will download only the new packages.
before_cache:
  - rm -rf $HOME/miniconda/envs/IOOS

matrix:
  fast_finish: true
  include:
    - name: "linux"
      os: linux
    - name: "publish"
      os: linux
    - name: "osx"
      os: osx

before_install:
  - |
    if [ "$TRAVIS_JOB_NAME" == "osx" ]; then
      URL="https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh"
    elif [ "$TRAVIS_JOB_NAME" == "linux" ] ; then
      URL="https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh"
    fi
    echo ""
    if [ ! -f $HOME/miniconda/bin/conda ] ; then
      echo "Fresh miniconda installation."
      wget $URL -O miniconda.sh
      rm -rf $HOME/miniconda
      bash miniconda.sh -b -p $HOME/miniconda
    fi
    export PATH="$HOME/miniconda/bin:$PATH"
    conda config --set always_yes yes --set changeps1 no --set show_channel_urls true
    conda install conda --channel conda-canary --quiet
    conda config --add channels conda-forge --force
    conda install pycryptosat
    conda config --set sat_solver pycryptosat
    conda config --set channel_priority strict

  # Pages deploy_key.
  - if [ $TRAVIS_PULL_REQUEST == "false" ]; then
      openssl aes-256-cbc -K $encrypted_2ed57bb9ae7e_key -iv $encrypted_2ed57bb9ae7e_iv -in deploy_key.enc -out deploy_key -d ;
    fi

install:
  - travis_wait conda env create --file environment.yml --name IOOS --quiet
  - source activate IOOS
  - conda install nbval

  # Debug.
  - conda info --all
  - conda list

script:
  # Test published notebooks.
  - if [ $TRAVIS_JOB_NAME == "linux" ]; then
      travis_wait pytest --nbval --nbval-lax notebooks/ ;
    fi

  - if [ $TRAVIS_JOB_NAME == "osx" ]; then
      python -c 'import gdal; print(dir(gdal))' ;
    fi

  # Publish the notebooks.
  - if [ $TRAVIS_JOB_NAME == "publish" ]; then
      pushd webpage && python make_index.py && popd ;
      find notebooks/ -maxdepth 1 -name \*.ipynb -print0 | xargs -0 -n1 jupyter nbconvert --config nbconvert_config.py ;
      bash webpage/deploy.sh ;
    fi
