language: minimal

sudo: false

env:
  global:
    - secure: "UuZqRQylmD9ovn4Xx5K3d6yY9DqUoMuOOyuKG9TbOHY98CKjMk8y6fFYZK/Q7e9Qmh8FuM49vn0Zme6W/lgJkwdjIZ4RX+yPVk8H3iXglExgbMa0EVFi/Cvy+x6K+a/ekUtsUcDxuEGruModmiodNiQLtXYU0rQ/aGClWh/NsLbObQpuP9+n3l6brRmzqOIHaPTUShSfydAsMPqyoyt+ha19F6uEQtYcWPWnUQssVuzPUvamlOqT38wbvnt4bqXQR/uZaK1zeZqi4ZDkhKwpBPJe9DUGgpTTsK+bT0DUoOSZApnTHLvNHFTf3OJxq4ZD3+DqQOZD0WczY8n9r8Jw2a+0wU5kcC4LbtL49396ShagpBuHH/JfN8KTe6/fW8TdsqMgJQ/Pfs3GltwWyqusGBC72brFH8h1QHpvj25sREzVtSGnmDVh9IWdZQBxy+a01ZjA6RssNN6feF4spJ/qparhgf7Wh1MY+ZknkeuqvaLhasU6qKnPOUAz1bBUfPJ48KsD/NRmHPPHfVtLQZviGNC0qKrr74nU3Y5h80xNenL5UcjzJcHltwGI7cBSfq/WUBIFy6WPUwUZ3jfEQp9DwXR5iOih3iMbVxWpKzreeyuwDzu29bdrOirAWxtcssLl+sLiNsL7efIVDNVHcT5RKE9r1PeBa45Zv0yyqoIdGkg="

cache:
  directories:
    - $HOME/miniconda

# Removing the directory will remove the env but leave the cached packages
# at $HOME/miniconda/pkgs. That is a win-win because when re-creating the
# env we will download only the new packages.
before_cache:
  - rm -rf $HOME/miniconda/envs/IOOS

matrix:
  fast_finish: true
  include:
    - name: "linux"
      os: linux
    - name: "osx"
      os: osx
    - name: "publish"
      os: linux
    - name: "coding-standards"
      os: linux

before_install:
  - |
    if [ "$TRAVIS_OS_NAME" == "osx" ]; then
      URL="https://repo.anaconda.com/pkgs/misc/previews/miniconda/4.7.10/Miniconda3-4.7.10.rc1-MacOSX-x86_64.sh"
    elif [ "$TRAVIS_OS_NAME" == "linux" ] ; then
      URL="https://repo.anaconda.com/pkgs/misc/previews/miniconda/4.7.10/Miniconda3-4.7.10.rc1-Linux-x86_64.sh"
    fi
    echo ""
    if [ ! -f $HOME/miniconda/bin/conda ] ; then
      echo "Fresh miniconda installation."
      wget $URL -O miniconda.sh
      rm -rf $HOME/miniconda
      bash miniconda.sh -b -p $HOME/miniconda
    fi
    export PATH="$HOME/miniconda/bin:$PATH"
    conda config --set always_yes yes --set changeps1 no --set show_channel_urls true
    conda update conda
    conda config --add channels conda-forge --force
    conda config --set safety_checks disabled
    conda config --set channel_priority strict

install:
  - travis_wait conda env create --file environment.yml --name IOOS --quiet
  - source activate IOOS
  - conda install nbval

  # Debug.
  - conda info --all
  - conda list

script:
  # Test published notebooks.
  - if [ $TRAVIS_JOB_NAME == "linux" ]; then
      travis_wait pytest --nbval --nbval-lax notebooks/ ;
    fi

  - if [ $TRAVIS_JOB_NAME == "osx" ]; then
      python -c 'import gdal; print(dir(gdal))' ;
    fi

  - if [ $TRAVIS_JOB_NAME == "coding-standards" ]; then
      find notebooks/ -maxdepth 1 -name \*.ipynb ! -name 2017-01-23-R-notebook.ipynb ! -name 2017-08-01-xtractoR.ipynb ! -name 2018-02-20-obis.ipynb ! -name 2017-03-30-octave_notebook_example.ipynb ! -name 2017-11-30-rerddap.ipynb -print0 | xargs -0 -n1 python nbflake8.py ;
    fi

  # Publish the notebooks.
  - if [ $TRAVIS_JOB_NAME == "publish" ]; then
      set -e ;
      conda install doctr ;
      pushd webpage && python make_index.py && popd ;
      find notebooks/ -maxdepth 1 -name \*.ipynb -print0 | xargs -0 -n1 jupyter nbconvert --config nbconvert_config.py ;
      python -m doctr deploy --key-path github_deploy_key_ioos_notebooks_demos.enc --built-docs webpage/ . ;
    fi
